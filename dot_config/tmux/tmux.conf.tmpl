# Configuration tmux moderne - OptimisÃ©e pour Neovim
# ThÃ¨me: Rose Pine coordonnÃ© avec Neovim et Starship
# Hostname: {{ .chezmoi.hostname }}
# OS: {{ .chezmoi.os }}

# ===== CONFIGURATION DE BASE =====
# Terminal et couleurs (optimisÃ© pour Neovim)
set -g default-terminal "tmux-256color"
{{- if eq .chezmoi.os "darwin" }}
set -ag terminal-overrides ",xterm-256color:RGB"
set -ag terminal-overrides ",*256col*:Tc"
set -ag terminal-overrides ",alacritty:RGB"
set -ag terminal-overrides ",ghostty:RGB"
set -gq allow-passthrough on
{{- else }}
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set-environment -g COLORTERM "truecolor"
{{- end }}

# RÃ©glages de performance
set -g mouse on
set -g history-limit 100000
set -g display-time 2000
set -g status-interval 1
set -g default-command "${SHELL}"

# NumÃ©rotation des fenÃªtres et panes Ã  partir de 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Mode vi pour la navigation (essentiel pour Neovim)
setw -g mode-keys vi
set -g status-keys emacs

# Optimisations pour Neovim
set -sg escape-time 0
set -g focus-events on
set -g aggressive-resize on

# Clipboard integration
set -g set-clipboard on

# ===== KEYBINDINGS NEOVIM-FRIENDLY =====
# Rechargement de la configuration
bind r source-file ~/.config/tmux/tmux.conf \; display "ðŸ”„ Configuration rechargÃ©e!"

# Splits plus intuitifs (comme dans Neovim)
bind - split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Navigation entre panes avec Alt+hjkl (sans prÃ©fixe, compatible Neovim)
# Ces bindings fonctionnent avec vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R

# Redimensionnement des panes (rÃ©pÃ©table)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Navigation entre fenÃªtres
bind -n M-p previous-window
bind -n M-n next-window
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5

# CrÃ©ation de nouvelles fenÃªtres dans le rÃ©pertoire courant
bind c new-window -c "#{pane_current_path}"
bind C new-window

# Mode copie vi amÃ©liorÃ© (comme dans Neovim)
bind Enter copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
{{- if eq .chezmoi.os "darwin" }}
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
{{- else }}
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection clipboard"
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -selection clipboard"
{{- end }}
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# Collage
bind p paste-buffer
bind P choose-buffer

# ===== SESSIONIZER ET WORKFLOWS PHP/SYMFONY =====
# Tmux sessionizer avec fzf (comme dans Neovim Telescope)
bind f run-shell "tmux neww ~/.config/tmux/scripts/tmux-sessionizer"

# Workflows de dÃ©veloppement spÃ©cialisÃ©s
bind C-s run-shell "~/.config/tmux/scripts/symfony-dev"
bind C-t run-shell "~/.config/tmux/scripts/typescript-dev"

# Gestion des sessions
bind S choose-session
bind X confirm-before -p "Tuer la session #S? (y/n)" kill-session
bind Q confirm-before -p "Tuer le serveur tmux? (y/n)" kill-server

# Zoom toggle (utile avec Neovim)
bind z resize-pane -Z

# ===== PLUGINS ESSENTIELS =====
# Liste des plugins (TPM - Tmux Plugin Manager)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'rose-pine/tmux'
{{- if eq .chezmoi.os "darwin" }}
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-battery'
{{- else }}
set -g @plugin 'fcsonline/tmux-thumbs'
{{- end }}

# ===== CONFIGURATION PLUGINS =====
# tmux-resurrect (sauvegarde des sessions)
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'
set -g @resurrect-processes 'nvim vim php node npm composer symfony'

# tmux-continuum (sauvegarde automatique)
set -g @continuum-restore 'on'
set -g @continuum-save-interval '10'
{{- if eq .chezmoi.os "darwin" }}
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'
{{- end }}

# tmux-yank (copie amÃ©liorÃ©e)
{{- if eq .chezmoi.os "darwin" }}
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard'
{{- else }}
set -g @yank_selection 'primary'
set -g @yank_selection_mouse 'clipboard'
{{- end }}
set -g @yank_action 'copy-pipe-and-cancel'

# tmux-open (ouverture de liens)
set -g @open-S 'https://www.google.com/search?q='
set -g @open-editor 'nvim'

{{- if ne .chezmoi.os "darwin" }}
# tmux-thumbs (sÃ©lection rapide de texte)
set -g @thumbs-key F
set -g @thumbs-alphabet dvorak-homerow
set -g @thumbs-reverse enabled
set -g @thumbs-unique enabled
{{- end }}

# ===== ROSE PINE THEME =====
# Configure Rose Pine
set -g @rose_pine_variant 'main' # Options 'main', 'moon' or 'dawn'
set -g @rose_pine_host 'on' # Enables hostname in the status bar
set -g @rose_pine_date_time '' # It accepts the date UNIX command format (man date for info)
set -g @rose_pine_user 'on' # Turn on the username component in the statusbar
set -g @rose_pine_directory 'on' # Turn on the current folder component in the status bar
set -g @rose_pine_bar_bg_disable 'on' # Disables background color, for transparent terminal emulators
# If @rose_pine_bar_bg_disable is set to 'on', uses the provided value to set the background color
# It can be any of the on tmux (named colors, 256-color set, `default` or hex colors)
# See more on http://man.openbsd.org/OpenBSD-current/man1/tmux.1#STYLES
set -g @rose_pine_bar_bg_disabled_color_option 'default'

set -g @rose_pine_only_windows 'on' # Leaves only the window module, for max focus and space
set -g @rose_pine_disable_active_window_menu 'on' # Disables the menu that shows the active window on the left

set -g @rose_pine_default_window_behavior 'on' # Forces tmux default behavior, you can still set it off
set -g @rose_pine_show_current_program 'on' # Forces tmux to show the current running program as window name
set -g @rose_pine_show_pane_directory 'on' # Forces tmux to show the current directory as window name
# Previously set -g @rose_pine_window_tabs_enabled

# Example values for these can be:
set -g @rose_pine_left_separator ' > ' # The strings to use as separators are 1-space padded
set -g @rose_pine_right_separator ' < ' # Accepts both normal chars & nerdfont icons
set -g @rose_pine_field_separator ' | ' # Again, 1-space padding, it updates with prefix + I
set -g @rose_pine_window_separator ' - ' # Replaces the default `:` between the window number and name

# These are not padded
set -g @rose_pine_session_icon '' # Changes the default icon to the left of the session name
set -g @rose_pine_current_window_icon '' # Changes the default icon to the left of the active window name
set -g @rose_pine_folder_icon '' # Changes the default icon to the left of the current directory folder
set -g @rose_pine_username_icon '' # Changes the default icon to the right of the hostname
set -g @rose_pine_hostname_icon 'ó°’‹' # Changes the default icon to the right of the hostname
set -g @rose_pine_date_time_icon 'ó°ƒ°' # Changes the default icon to the right of the date module
set -g @rose_pine_window_status_separator "  " # Changes the default icon that appears between window names

# Very beta and specific opt-in settings, tested on v3.2a, look at issue #10
set -g @rose_pine_prioritize_windows 'on' # Disables the right side functionality in a certain window count / terminal width
set -g @rose_pine_width_to_hide '80' # Specify a terminal width to toggle off most of the right side functionality
set -g @rose_pine_window_count '5' # Specify a number of windows, if there are more than the number, do the same as width_to_hide

#===== CONFIGURATION LOCALE =====
# Inclusion de la configuration locale si elle existe
if-shell "test -f ~/.tmux.conf.local" "source ~/.tmux.conf.local"

# ===== INITIALISATION TPM =====
# Installation automatique de TPM si nÃ©cessaire
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialisation du gestionnaire de plugins (doit Ãªtre Ã  la fin)
run '~/.tmux/plugins/tpm/tpm'