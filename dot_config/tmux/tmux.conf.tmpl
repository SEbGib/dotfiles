# Configuration tmux moderne - Optimis√©e pour Neovim
# Th√®me: Catppuccin Mocha coordonn√© avec Neovim et Starship
# Hostname: {{ .chezmoi.hostname }}
# OS: {{ .chezmoi.os }}

# ===== CONFIGURATION DE BASE =====
# Terminal et couleurs (optimis√© pour Neovim)
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set-environment -g COLORTERM "truecolor"

# R√©glages de performance
set -g mouse on
set -g history-limit 100000
set -g display-time 2000
set -g status-interval 1
set -g default-command "${SHELL}"

# Num√©rotation des fen√™tres et panes √† partir de 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Mode vi pour la navigation (essentiel pour Neovim)
setw -g mode-keys vi
set -g status-keys emacs

# Optimisations pour Neovim
set -sg escape-time 0
set -g focus-events on
set -g aggressive-resize on

# Clipboard integration
set -g set-clipboard on

# ===== KEYBINDINGS NEOVIM-FRIENDLY =====
# Rechargement de la configuration
bind r source-file ~/.config/tmux/tmux.conf \; display "üîÑ Configuration recharg√©e!"

# Splits plus intuitifs (comme dans Neovim)
bind - split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Navigation entre panes avec Alt+hjkl (sans pr√©fixe, compatible Neovim)
# Ces bindings fonctionnent avec vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R

# Redimensionnement des panes (r√©p√©table)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Navigation entre fen√™tres
bind -n M-p previous-window
bind -n M-n next-window
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5

# Cr√©ation de nouvelles fen√™tres dans le r√©pertoire courant
bind c new-window -c "#{pane_current_path}"
bind C new-window

# Mode copie vi am√©lior√© (comme dans Neovim)
bind Enter copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "{{- if eq .chezmoi.os "darwin" }}pbcopy{{- else }}xclip -selection clipboard{{- end }}"
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "{{- if eq .chezmoi.os "darwin" }}pbcopy{{- else }}xclip -selection clipboard{{- end }}"
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# Collage
bind p paste-buffer
bind P choose-buffer

# ===== SESSIONIZER ET WORKFLOWS PHP/SYMFONY =====
# Tmux sessionizer avec fzf (comme dans Neovim Telescope)
bind f run-shell "tmux neww ~/.config/tmux/scripts/tmux-sessionizer"

# Workflows de d√©veloppement sp√©cialis√©s
bind C-s run-shell "~/.config/tmux/scripts/symfony-dev"
bind C-t run-shell "~/.config/tmux/scripts/typescript-dev"

# Gestion des sessions
bind S choose-session
bind X confirm-before -p "Tuer la session #S? (y/n)" kill-session
bind Q confirm-before -p "Tuer le serveur tmux? (y/n)" kill-server

# Zoom toggle (utile avec Neovim)
bind z resize-pane -Z

# ===== PLUGINS ESSENTIELS =====
# Liste des plugins (TPM - Tmux Plugin Manager)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'fcsonline/tmux-thumbs'

# ===== CONFIGURATION PLUGINS =====
# tmux-resurrect (sauvegarde des sessions)
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'
set -g @resurrect-processes 'nvim vim php node npm composer symfony'

# tmux-continuum (sauvegarde automatique)
set -g @continuum-restore 'on'
set -g @continuum-save-interval '10'
set -g @continuum-boot 'on'
{{- if eq .chezmoi.os "darwin" }}
set -g @continuum-boot-options 'iterm'
{{- end }}

# tmux-yank (copie am√©lior√©e)
{{- if eq .chezmoi.os "darwin" }}
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard'
{{- else }}
set -g @yank_selection 'primary'
set -g @yank_selection_mouse 'clipboard'
{{- end }}
set -g @yank_action 'copy-pipe-and-cancel'

# vim-tmux-navigator (navigation Neovim/tmux)
set -g @plugin 'christoomey/vim-tmux-navigator'

# tmux-open (ouverture de liens)
set -g @open-S 'https://www.google.com/search?q='
set -g @open-editor 'nvim'

# tmux-thumbs (s√©lection rapide de texte)
set -g @thumbs-key F
set -g @thumbs-alphabet dvorak-homerow
set -g @thumbs-reverse enabled
set -g @thumbs-unique enabled

# Configure Catppuccin
set -g @catppuccin_flavor "mocha"
set -g @catppuccin_status_background "none"
set -g @catppuccin_window_status_style "none"
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"

# Configure Online status
set -g @online_icon "ok"
set -g @offline_icon "nok"

# status left look and feel
set -g status-left-length 100
set -g status-left ""
set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_red},fg=#{@thm_bg},bold] ÓØà #S },#{#[bg=#{@thm_bg},fg=#{@thm_green}] ÓØà #S }}"
# set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]‚îÇ"
# set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_maroon}] Ó™Ö #{pane_current_command} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]‚îÇ"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_blue}] Ó´∑ #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}}} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]#{?window_zoomed_flag,‚îÇ,}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_yellow}]#{?window_zoomed_flag, Ó≠ø zoom ,}"

# status right look and feel
set -g status-right-length 100
set -g status-right ""
set -ga status-right "#{?#{e|>=:10,#{battery_percentage}},#{#[bg=#{@thm_red},fg=#{@thm_bg}]},#{#[bg=#{@thm_bg},fg=#{@thm_pink}]}} #{battery_icon} #{battery_percentage} "
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]‚îÇ"
set -ga status-right "#[bg=#{@thm_bg}]#{?#{==:#{online_status},ok},#[fg=#{@thm_mauve}] Û∞ñ© on ,#[fg=#{@thm_red},bold]#[reverse] Û∞ñ™ off }"
# set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]‚îÇ"
# set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_blue}] Û∞≠¶ %Y-%m-%d Û∞Öê %H:%M "


# Configure Tmux
set -g status-position bottom
set -g status-style "bg=#{@thm_bg}"
set -g status-justify "absolute-centre"

# pane border look and feel
# setw -g pane-border-status top
# setw -g pane-border-format ""
# setw -g pane-active-border-style "bg=#{@thm_bg},fg=#{@thm_overlay_0}"
# setw -g pane-border-style "bg=#{@thm_bg},fg=#{@thm_surface_0}"
# setw -g pane-border-lines single

# window look and feel
set -wg automatic-rename on
set -g automatic-rename-format "#{pane_current_command}"

set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-style "bg=#{@thm_bg},fg=#{@thm_rosewater}"
set -g window-status-last-style "bg=#{@thm_bg},fg=#{@thm_peach}"
set -g window-status-activity-style "bg=#{@thm_red},fg=#{@thm_bg}"
set -g window-status-bell-style "bg=#{@thm_red},fg=#{@thm_bg},bold"
set -gF window-status-separator "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}]‚îÇ"

set -g window-status-current-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-current-style "bg=#{@thm_peach},fg=#{@thm_bg},bold"

#===== CONFIGURATION LOCALE =====
# Inclusion de la configuration locale si elle existe
if-shell "test -f ~/.tmux.conf.local" "source ~/.tmux.conf.local"

# ===== INITIALISATION TPM =====
# Installation automatique de TPM si n√©cessaire
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialisation du gestionnaire de plugins (doit √™tre √† la fin)
run '~/.tmux/plugins/tpm/tpm'

