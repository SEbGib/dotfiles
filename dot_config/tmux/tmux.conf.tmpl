# Configuration tmux moderne - G√©n√©r√©e par Chezmoi
# Th√®me: Catppuccin Mocha coordonn√© avec Neovim et Starship
# Hostname: {{ .chezmoi.hostname }}
# OS: {{ .chezmoi.os }}

# ===== CONFIGURATION DE BASE =====
# Utiliser Ctrl+Space comme pr√©fixe (plus ergonomique)
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# R√©glages de base
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"
set -g mouse on
set -g history-limit 50000
set -g display-time 4000
set -g status-interval 5
set -g default-command "${SHELL}"

# Num√©rotation des fen√™tres et panes √† partir de 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Mode vi pour la navigation
setw -g mode-keys vi
set -g status-keys emacs

# Pas de d√©lai pour l'√©chappement (important pour Neovim)
set -sg escape-time 0

# Focus events (important pour Neovim)
set -g focus-events on

# ===== KEYBINDINGS MODERNES =====
# Rechargement de la configuration
bind r source-file ~/.config/tmux/tmux.conf \; display "Configuration recharg√©e!"

# Splits plus intuitifs
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Navigation entre panes avec Alt+hjkl (sans pr√©fixe)
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Redimensionnement des panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Navigation entre fen√™tres
bind -n M-p previous-window
bind -n M-n next-window

# Cr√©ation de nouvelles fen√™tres dans le r√©pertoire courant
bind c new-window -c "#{pane_current_path}"

# Mode copie vi am√©lior√©
bind Enter copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "{{ if eq .chezmoi.os "darwin" }}pbcopy{{ else }}xclip -selection clipboard{{ end }}"
bind -T copy-mode-vi r send -X rectangle-toggle
bind -T copy-mode-vi Escape send -X cancel

# Collage
bind p paste-buffer

# ===== SESSIONIZER ET WORKFLOWS =====
# Tmux sessionizer avec fzf
bind f run-shell "tmux neww ~/.config/tmux/scripts/tmux-sessionizer"

# Workflows de d√©veloppement
bind C-s run-shell "tmux neww ~/.config/tmux/scripts/symfony-dev"
bind C-t run-shell "tmux neww ~/.config/tmux/scripts/typescript-dev"

# Gestion des sessions
bind S choose-session
bind X confirm-before -p "Tuer la session #S? (y/n)" kill-session

# ===== TH√àME CATPPUCCIN MOCHA =====
# Palette de couleurs
thm_bg="#1e1e2e"
thm_fg="#cdd6f4"
thm_cyan="#89dceb"
thm_black="#181825"
thm_gray="#313244"
thm_magenta="#cba6f7"
thm_pink="#f5c2e7"
thm_red="#f38ba8"
thm_green="#a6e3a1"
thm_yellow="#f9e2af"
thm_blue="#89b4fa"
thm_orange="#fab387"
thm_black4="#585b70"

# Configuration des couleurs
set -g status-style "bg=$thm_bg,fg=$thm_fg"
set -g status-left-style "bg=$thm_bg,fg=$thm_fg"
set -g status-right-style "bg=$thm_bg,fg=$thm_fg"

# Couleurs des panes
set -g pane-border-style "fg=$thm_gray"
set -g pane-active-border-style "fg=$thm_blue"

# Couleurs des fen√™tres
setw -g window-status-style "bg=$thm_bg,fg=$thm_fg"
setw -g window-status-current-style "bg=$thm_gray,fg=$thm_magenta,bold"
setw -g window-status-activity-style "bg=$thm_bg,fg=$thm_yellow"

# Mode copie
setw -g mode-style "bg=$thm_pink,fg=$thm_bg"

# Messages
set -g message-style "bg=$thm_orange,fg=$thm_bg"
set -g message-command-style "bg=$thm_orange,fg=$thm_bg"

# ===== BARRE DE STATUT =====
set -g status-position bottom
set -g status-justify left
set -g status-left-length 50
set -g status-right-length 150

# Partie gauche : session et fen√™tre
set -g status-left "#[bg=$thm_blue,fg=$thm_bg,bold] #S #[bg=$thm_bg,fg=$thm_blue]"

# Partie droite : informations syst√®me
set -g status-right "#[fg=$thm_gray]#[bg=$thm_gray,fg=$thm_fg] %Y-%m-%d #[bg=$thm_blue,fg=$thm_bg,bold] %H:%M #[bg=$thm_bg,fg=$thm_blue]#[fg=$thm_green]#[bg=$thm_green,fg=$thm_bg,bold] #h "

# Format des fen√™tres
setw -g window-status-format "#[bg=$thm_bg,fg=$thm_fg] #I:#W "
setw -g window-status-current-format "#[bg=$thm_gray,fg=$thm_magenta,bold] #I:#W#{?window_zoomed_flag, üîç,} "

# Indicateurs d'activit√©
setw -g monitor-activity on
set -g visual-activity off

# ===== PLUGINS ET EXTENSIONS =====
# Liste des plugins (TPM - Tmux Plugin Manager)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

# Configuration tmux-resurrect
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'

# Configuration tmux-continuum
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# Configuration tmux-yank
set -g @yank_selection_mouse 'clipboard'
set -g @yank_action 'copy-pipe-and-cancel'

# ===== CONFIGURATION SP√âCIFIQUE OS =====
{{- if eq .chezmoi.os "darwin" }}
# Configuration macOS
set -g @yank_selection 'primary'
set -g @yank_selection_mouse 'clipboard'

# Int√©gration avec iTerm2
set -g @plugin 'tmux-plugins/tmux-open'
set -g @open-S 'https://www.google.com/search?q='
{{- end }}

{{- if eq .chezmoi.os "linux" }}
# Configuration Linux
set -g @yank_selection 'clipboard'

# Support pour Wayland
if-shell 'test -n "$WAYLAND_DISPLAY"' {
    set -g @yank_selection 'clipboard'
    set -g @override_copy_command 'wl-copy'
}
{{- end }}

# ===== HOOKS ET AUTOMATISATIONS =====
# Hook pour d√©finir le titre de la fen√™tre
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Hook pour les projets de d√©veloppement
set-hook -g after-new-session 'if-shell "test -f package.json" "rename-session \"$(basename $PWD)\""'
set-hook -g after-new-session 'if-shell "test -f composer.json" "rename-session \"$(basename $PWD)\""'

# ===== CONFIGURATION D√âVELOPPEMENT =====
# D√©tection automatique du type de projet
set-hook -g after-new-window 'run-shell "~/.config/tmux/scripts/detect-project-type"'

# Raccourcis pour les outils de d√©veloppement
{{- if lookPath "lazygit" }}
bind g new-window -n "lazygit" "lazygit"
{{- end }}

{{- if lookPath "node" }}
bind n new-window -n "node" "node"
{{- end }}

{{- if lookPath "php" }}
bind P new-window -n "php" "php -a"
{{- end }}

# ===== CONFIGURATION LOCALE =====
# Inclusion de la configuration locale si elle existe
if-shell "test -f ~/.tmux.conf.local" "source ~/.tmux.conf.local"

# ===== INITIALISATION TPM =====
# Initialisation du gestionnaire de plugins (doit √™tre √† la fin)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'

# ===== MESSAGES DE D√âMARRAGE =====
display-message "tmux configur√© avec le th√®me Catppuccin Mocha üé®"